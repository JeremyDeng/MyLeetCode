//time:O(n). space:O(n)
class Solution {
    public boolean isReflected(int[][] points) {
        HashSet<String> set = new HashSet<>();
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        for (int[] pair : points) {
            set.add(pair[0] + "," + pair[1]);
            min = Math.min(min, pair[0]);
            max = Math.max(max, pair[0]);
        }
        int sum = min + max;
        for (int[] pair : points) {
            if (!set.contains(sum - pair[0] + "," + pair[1])) {
                return false;
            }
        }
        return true;
    }
}

/*
Thinking:
1. Use hashset to find symmetry axis.
2. Store pair[0], pair[1] in hashset.
   Find min and max x.
3. For each reflected point, their y should be same and sum of x should be equal to
   min+max.
*/