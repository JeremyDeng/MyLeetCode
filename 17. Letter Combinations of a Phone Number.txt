//time:O(3^n), space:O(n)
class Solution {
    String[] mapping = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
    
    public List<String> letterCombinations(String digits) {
        List<String> res = new ArrayList<>();
        if (digits == null || digits.length() == 0) return res;
        helper(res, digits, "", 0);
        return res;
    }
    
    private void helper(List<String> res, String digits, String s, int start) {
        if (start == digits.length()) {
            res.add(s);
            return;
        }
        int d = digits.charAt(start) - '0';
        for (char c : mapping[d].toCharArray()) {
            helper(res, digits, s + c, start + 1);
        }
    }
}