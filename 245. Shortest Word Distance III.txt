//time:O(n),space:O(1)
class Solution {
    public int shortestWordDistance(String[] words, String word1, String word2) {
        int res = words.length;
        int a = -1;
        int b = -1;
        for(int i = 0; i < words.length; i++){
            if(words[i].equals(word1)){
                a = i;
            }
            if(words[i].equals(word2)){
                if(word1.equals(word2)){
                    a = b;
                }
                b = i;
            }
            if(a != -1 && b != -1){
                res = Math.min(res, Math.abs(a - b));
            }
        }
        return res;
    }
}

/*
Thinking:
1. Initiate two variables as -1.
2. Traverse through the input array. If words[i] equals to word2 and word1 is same as      word1, give previous b to a and update b to current index i.
*/