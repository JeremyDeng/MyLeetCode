//time:O(n), space:O(n)
class Solution {
    public int candy(int[] ratings) {
        if (ratings == null || ratings.length == 0)
            return 0;
        int[] candies = new int[ratings.length];
        Arrays.fill(candies, 1);
        
        //scan from left to right
        for (int i = 1; i < ratings.length; i++) {
            if (ratings[i] > ratings[i - 1]) {
                candies[i] = candies[i - 1] + 1;
            }
        }
        
        //scan from right to left
        for (int i = ratings.length - 2; i >= 0; i--) {
             if (ratings[i] > ratings[i + 1]) {
                 candies[i] = Math.max(candies[i], (candies[i + 1] + 1));
             }
        }
        
        int res = 0;
        for (int candy : candies) {
            res += candy;
        }
        return res;
    }
}

/*
Thinking:
1. Create an array and fill it with default value one.
2. Scan from left to right then right to left, give one more candy if it has higher rating.
3. Calculate the sum of candies.
*/