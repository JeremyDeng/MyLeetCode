//time:O(n^2),space:O(1)
//time complexity of .substring() changed from O(1) to O(n) in Java7
class Solution {
    public boolean isOneEditDistance(String s, String t) {
        for(int i = 0; i < Math.min(s.length(), t.length()); i++){
            if(s.charAt(i) != t.charAt(i)){
                if(s.length() == t.length()){
                    return s.substring(i + 1).equals(t.substring(i + 1));
                }else if(s.length() > t.length()){
                    return s.substring(i + 1).equals(t.substring(i));
                }else{
                    return s.substring(i).equals(t.substring(i + 1));
                }
            }
        }
        return Math.abs(s.length() - t.length()) == 1;
    }
}

/*
Thinking:

Case 1: (if)
s has the same length as t, so the only possibility is replacing one char in s and t.

Case 2: (else if)
t is longer than s, so the only possibility is deleting one char from t.

Case 3: (else)
s is longer than t, so the only possibility is deleting one char from s.

Case 4:(return)
All previous chars are the same, the only possibility is deleting the end char in the longer one of s and t.
*/