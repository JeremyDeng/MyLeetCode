//time:O(n), space:O(n)
class Solution {
    public String intToRoman(int num) {
        int[] values = { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
        String[] strs = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < values.length; i++) {
            while (num >= values[i]) {
                num -= values[i];
                sb.append(strs[i]);
            }
        }
        return sb.toString();
    }
}

/*
Thinking:
1. Create int array to store integer, and create string array to store Roman.
2. Create a new stringbuilder then traverse values.
3. Each time detract values[i] and append corresponding string to stringbuilder.
4. return sb.toString();
*/