// time : O(n) space : O(n)
public String rearrangeString(String s, int k) {
    if (s == null || s.length() == 0) {
        return s;
    }
    int[] count = new int[26];
    int[] valid = new int[26];
    for (char c : s.toCharArray()) {
        count[c - 'a']++;
    }
    StringBuilder res = new StringBuilder();
    for (int i = 0; i < s.length(); i++) {
        int nextLetter = findNext(count, valid, i);
        if (nextLetter == -1) {
            return "";
        }
        res.append((char)('a' + nextLetter));
        valid[nextLetter] = i + k;
        count[nextLetter]--;
    }
    return res.toString();
}

private int findNext(int[] count, int[] valid, int index) {
    int max = 0, res = -1;
    for (int i = 0; i < count.length; i++) {
        if (count[i] > max && valid[i] <= index) {
            res = i;
            max = count[i];
        }
    }
    return res;
}