//time:O(n^2),space:O(n)
class Solution {
    public List<Integer> getRow(int rowIndex) {
	    List<Integer> res = new ArrayList<Integer>();
	    if (rowIndex < 0) return res;
        for (int i = 0; i <= rowIndex; i++) {
		    res.add(0, 1);
		    for (int j = 1; j < res.size() - 1; j++) {
			    res.set(j, res.get(j) + res.get(j + 1));
		    }
	    }
	    return res;
    }
}

/*
Thinking:
1. Same as 118. Pascal's Triangle.
2. Create a current arrayList and maintain it everytime.
*/