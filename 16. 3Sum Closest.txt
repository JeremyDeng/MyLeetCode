//time:O(n^2), space:O(1)
class Solution {
    public int threeSumClosest(int[] nums, int target) {
        int res = nums[0] + nums[1] + nums[nums.length - 1];
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 2; i++) {
            int start = i + 1, end = nums.length - 1;
            while (start < end) {
                int sum = nums[i] + nums[start] + nums[end];
                if (sum > target) {
                    end--;
                } else {
                    start++;
                }
                if (Math.abs(sum - target) < Math.abs(res - target)) {
                    res = sum;
                }
            }
        }
        return res;
    }
}

/*
Thinking:
1. Similar to 15.3Sum.
2. Set res to default value, then sort input array.
3. Traverse the sorted array, starting from index 0 to nums.length - 2.
4. Check if Math.abs(sum-target) is smaller. If so, update res.
*/