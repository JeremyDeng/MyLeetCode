//time : O(n^min{k,n-k}) space : O(n)
class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        backtrack(res, new ArrayList<>(), 1, n, k);
        return res;
    }
    
    private void backtrack(List<List<Integer>> res, List<Integer> tempList, int start, int n, int k) {
        if (k == 0) {
            res.add(new ArrayList<>(tempList));
            return;
        }
        for (int i = start; i <= n; i++) {
            tempList.add(i);
            backtrack(res, tempList, i + 1, n, k - 1);
            tempList.remove(tempList.size() - 1);
        }
    }
}