//time:O(n),space:o(1)
class Solution {
    public int firstUniqChar(String s) {
        int[] count = new int[26];
        for (int i = 0; i < s.length(); i++) {
            count[s.charAt(i) - 'a']++;
        }
        for (int i = 0; i < s.length(); i++) {
            if (count[s.charAt(i) - 'a'] == 1) {
                return i;
            }
        }
        return -1;
    }
}

/*
Thinking:
1. Create new array with 26 digits to store lowercase letters.
2. Accumulate repeating times at position s.charAt(i) - 'a'.
   If count[s.charAt(i) - 'a'] == 1, it means current character only
   appeared once.
*/