/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
//recursion:
//time:O(n), space:O(n)
class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if (root == null) return false;
        if (root.left == null && root.right == null){
            return sum == root.val;
        }
        return hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);
    }
}

/*
//stack:
public boolean hasPathSum(TreeNode root, int sum) {
    if (root == null) return false;
	Stack <TreeNode> stack = new Stack<> ();	    
	stack.push(root);	    
	while (!stack.isEmpty()){
	    TreeNode cur = stack.pop();	
	    if (cur.left == null && cur.right == null){	    		
	    	if (cur.val == sum ) 
                return true;
	    }
	    if (cur.right != null) {
	    	stack.push(cur.right);
            cur.right.val += cur.val;
            
	    }
	    if (cur.left != null) {
	    	stack.push(cur.left);
            cur.left.val += cur.val;
	    }
	}	    
	return false ;
}
*/