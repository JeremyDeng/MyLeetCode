//time:O(n),space:O(1)
class Solution {
    public int trap(int[] height) {
        int left = 0, right = height.length - 1;
        int leftMax = 0, rightMax = 0;
        int res = 0;
        while (left < right) {
            if (height[left] < height[right]) {
                leftMax = Math.max(leftMax, height[left]);
                res += leftMax - height[left];
                left++;
            } else {
                rightMax = Math.max(rightMax, height[right]);
                res += rightMax - height[right];
                right--;
            }
        }
        return res;
    }
}

/*
Thinking:
1. Use two pointer left and right starting from the begining and end to track the height.
2. Create two variables leftMax and rightMax. Rain water will be trapped when height[left] or height[right]
   is smaller than leftMax or rightMax.
3. The amount of water that can be trapped is determined by the shorter bar, so we do left++ if
   height[left] < height[right]. Otherwise, we do right--;
*/