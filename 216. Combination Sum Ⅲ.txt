class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<Integer>(), k, 1, n);
        return result;
    }
    
    private void backtrack(List<List<Integer>> result, List<Integer> temp, int k, int start, int n){
        if(temp.size() == k && n == 0){
            List<Integer> ans = new ArrayList<Integer>(temp);
            result.add(ans);
            return;
        }
        for(int i = start; i < 10; i++){
            temp.add(i);
            backtrack(result, temp, k, i + 1, n - i);
            temp.remove(temp.size() - 1);
        }
    }
}