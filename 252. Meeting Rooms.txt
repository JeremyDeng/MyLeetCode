//time:O(nlogn),space:O(1)
/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution{
    public boolean canAttendMeetings(Interval[] intervals){
        Arrays.sort(intervals, (x, y) -> x.start - y.start);
        for(int i = 1; i < intervals.length; i++){
            if(intervals[i - 1].end > intervals[i].start){
                return false;
            }
        }
        return true;
    }
}

/*
class Solution {
    public boolean canAttendMeetings(Interval[] intervals) {
        Arrays.sort(intervals, new Comparator<Interval>() {
            public int compare(Interval i1, Interval i2) {
                return i1.start - i2.start;
            }        
        });
        for (int i = 0; i < intervals.length - 1; i++) {
            if (intervals[i].end > intervals[i + 1].start) return false;
        }
        return true;
    }
}
*/