class Solution {
    public boolean exist(char[][] board, String word) {
        if(board == null || word == null || board.length == 0) return false;
        int n = board.length, m = board[0].length;
        boolean[][] visited = new boolean[n][m];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(exist(board, visited, word, i, j, 0)) return true;
            }
        }
        return false;
    }
    
    private boolean exist(char[][] board, boolean[][] visited, String word, int i, int j, int index){
        if(index == word.length()) return true;
        if(i < 0 || j < 0 || i > board.length - 1 || j > board[0].length - 1) return false;
        if(visited[i][j] || board[i][j] != word.charAt(index)) return false;
        visited[i][j] = true;
        if(exist(board, visited, word, i - 1, j, index + 1) ||
           exist(board, visited, word, i + 1, j, index + 1) ||
           exist(board, visited, word, i, j - 1, index + 1) ||
           exist(board, visited, word, i, j + 1, index + 1)
          ) return true;
        visited[i][j] = false;
        return false;
    }
}